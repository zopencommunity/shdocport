SHDOC_VERSION="1.2"
export ZOPEN_DEV_URL="https://github.com/reconquest/shdoc.git"
export ZOPEN_STABLE_URL="https://github.com/reconquest/shdoc/archive/refs/tags/v${SHDOC_VERSION}.tar.gz"
export ZOPEN_STABLE_DEPS="bash make automake autoconf git zoslib gawk sed grep coreutils getopt"
export ZOPEN_CATEGORIES="documentation"
export ZOPEN_DEV_DEPS="bash make automake autoconf git zoslib gawk sed grep coreutils getopt"
export ZOPEN_BUILD_LINE="DEV"
export ZOPEN_RUNTIME_DEPS="bash gawk"
export ZOPEN_BOOTSTRAP="skip"
export ZOPEN_CONFIGURE="skip"
export ZOPEN_BUILD="skip"
export ZOPEN_CLONE_SUBMODULES="yes" 
export ZOPEN_CHECK="${PWD}/shdoc/tests/run_tests"
export ZOPEN_INSTALL_OPTS="install DST=\${ZOPEN_INSTALL_DIR}/bin/"
export _EDC_SIG_DFLT=1

export ZOPEN_NAME="shdoc-${SHDOC_VERSION}"
rm -f "v${SHDOC_VERSION}"
ln -s ${ZOPEN_NAME} "v${SHDOC_VERSION}"

zopen_init()
{
  export LIBPATH="$COREUTILS_HOME/libexec/coreutils:$LIBPATH"
}


zopen_pre_install() {
  mkdir -p "${ZOPEN_INSTALL_DIR}/bin/"
}

zopen_append_to_setup()
{
cat <<EOF
  path="\$ZOPEN_PKGINSTALL/gawk/gawk/bin/gawk"
  sed -i "s;/usr/bin/gawk;\$path;"  \${PWD}/bin/shdoc
EOF
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_append_to_env()
{
  # echo envars outside of PATH, MANPATH, LIBPATH
}

zopen_append_to_setup()
{
  # echo commands that will run when installing via setup.sh
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  echo "${SHDOC_VERSION}"
}
